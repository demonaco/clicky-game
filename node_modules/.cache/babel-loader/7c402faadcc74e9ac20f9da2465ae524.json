{"ast":null,"code":"var _jsxFileName = \"/Users/matthewdemonaco/clicky-game/clicky-game/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport './App.css';\nimport BadgeCard from './components/BadgeCard/index';\nimport Bootstrap from \"./components/Bootstrap/index\";\nimport Badges from \"./Badges.json\";\nimport footer from './components/Footer/index';\nimport { render } from 'react-dom';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Badges,\n      clickedItems: [],\n      score: 0\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        score: this.state.score + 1\n      });\n    };\n\n    this.shuffleFun = () => {\n      let newArr = this.state.Badges.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n      console.log(\"------\");\n      console.log(newArr);\n      this.setState({\n        Badges: newArr\n      });\n    };\n\n    this.clickedBadge = id => {\n      const newArr = [];\n      const Badges = this.state.Badges.forEach(event => Badges.id);\n      newArr.push(Badges.id);\n\n      for (let i = 0; i < Badges.length; i++) {\n        if (newArr[i] == Badges.id) alert(\"Sorry you lost!\");\n      }\n    };\n\n    this.multiFunc = () => {\n      this.shuffleFun();\n      this.handleIncrement();\n    };\n  }\n\n  // if ()\n  componentDidMount() {\n    let newArr = this.state.Badges.sort(function (a, b) {\n      return 0.5 - Math.random();\n    });\n    console.log(\"------\");\n    console.log(newArr);\n    this.setState({\n      Badges: newArr\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navcontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"navbar-brand\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Gotta click 'em all!\"), React.createElement(\"p\", {\n      className: \"yourScore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Current Score: \", this.setState), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), React.createElement(Bootstrap, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), this.state.Badges.map(c => React.createElement(BadgeCard, {\n      image: c.image,\n      key: c.id,\n      onClick: this.multiFunc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"row\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matthewdemonaco/clicky-game/clicky-game/src/App.js"],"names":["React","Component","Fragment","BadgeCard","Bootstrap","Badges","footer","render","App","state","clickedItems","score","handleIncrement","setState","shuffleFun","newArr","sort","a","b","Math","random","console","log","clickedBadge","id","forEach","event","push","i","length","alert","multiFunc","componentDidMount","map","c","image"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport BadgeCard from './components/BadgeCard/index';\nimport Bootstrap from \"./components/Bootstrap/index\";\nimport Badges from \"./Badges.json\";\nimport footer from './components/Footer/index';\nimport { render } from 'react-dom';\n\n\nclass App extends Component {\n  state = {\n    Badges,\n    clickedItems: [],\n    score: 0\n  };\n\n\n\n  handleIncrement = () => {\n    this.setState({ score: this.state.score + 1 });\n  }\n\n  // if ()\n\n\n  componentDidMount() {\n\n    let newArr = this.state.Badges.sort(function (a, b) { return 0.5 - Math.random() })\n    console.log(\"------\")\n    console.log(newArr)\n    this.setState({\n      Badges: newArr\n    })\n  }\n\n  shuffleFun = () => {\n    let newArr = this.state.Badges.sort(function (a, b) { return 0.5 - Math.random() })\n    console.log(\"------\")\n    console.log(newArr)\n    this.setState({\n      Badges: newArr\n    })\n  }\n\n\n  // set the state to event target\n\n  clickedBadge = id => {\n    const newArr = [];\n    const Badges = this.state.Badges.forEach(event => Badges.id)\n    newArr.push(Badges.id);\n    for (let i = 0; i < Badges.length; i++) {\n      if (newArr[i] == Badges.id)\n        alert(\"Sorry you lost!\")\n    }\n  }\n\n\n\n  multiFunc = () => {\n    this.shuffleFun();\n    this.handleIncrement();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"navcontainer\">\n          <nav class=\"navbar navbar-light bg-light\">\n            <a class=\"navbar-brand\" href=\"#\">\n              Gotta click 'em all!\n  </a>\n            <p className=\"yourScore\">\n              Current Score: {this.setState}\n            </p>\n            <p>\n            </p>\n          </nav>\n        </div>\n        <Bootstrap\n        />\n        {this.state.Badges.map(c =>\n          <BadgeCard\n            image={c.image} key={c.id} onClick={this.multiFunc}\n          />\n        )}\n        <row>\n        </row>\n        <footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}